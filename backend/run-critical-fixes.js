#!/usr/bin/env node

/**
 * Script principal para executar todas as corre√ß√µes cr√≠ticas do backend
 * Execute: node run-critical-fixes.js
 */

const { execSync } = require('child_process');
const fs = require('fs');
const path = require('path');

console.log('üö® FaceBlog - Corre√ß√µes Cr√≠ticas do Backend');
console.log('==========================================\n');

async function runCriticalFixes() {
  try {
    // 1. Verificar depend√™ncias
    console.log('üì¶ Verificando depend√™ncias...');
    await checkDependencies();
    
    // 2. Aplicar corre√ß√µes SQL
    console.log('\nüîß Aplicando corre√ß√µes SQL...');
    await applySQLFixes();
    
    // 3. Executar script de corre√ß√µes cr√≠ticas
    console.log('\n‚ö° Executando corre√ß√µes cr√≠ticas...');
    await runCriticalFixesScript();
    
    // 4. Testar servidor melhorado
    console.log('\nüöÄ Testando servidor melhorado...');
    await testEnhancedServer();
    
    console.log('\nüéâ Todas as corre√ß√µes cr√≠ticas foram aplicadas com sucesso!');
    console.log('\nüìã Pr√≥ximos passos:');
    console.log('1. Use o servidor melhorado: node src/enhanced-server.js');
    console.log('2. Teste com a API Key demo: fb_demo_6db80687b8611835730430e87c63136a3bfbdef8f658250e5d078320c23809de');
    console.log('3. Verifique o isolamento multi-tenant');
    console.log('4. Monitore o rate limiting');
    
  } catch (error) {
    console.error('\n‚ùå Erro durante as corre√ß√µes:', error.message);
    console.log('\nüîç Diagn√≥stico:');
    console.log('- Verifique se o Supabase est√° configurado corretamente');
    console.log('- Confirme se as vari√°veis de ambiente est√£o definidas');
    console.log('- Execute manualmente: node src/scripts/apply-critical-fixes.js');
    process.exit(1);
  }
}

async function checkDependencies() {
  const requiredPackages = [
    'express',
    'cors',
    'dotenv',
    '@supabase/supabase-js',
    'bcrypt',
    'helmet',
    'compression'
  ];

  const packageJsonPath = path.join(__dirname, 'package.json');
  
  if (!fs.existsSync(packageJsonPath)) {
    throw new Error('package.json n√£o encontrado');
  }

  const packageJson = JSON.parse(fs.readFileSync(packageJsonPath, 'utf8'));
  const dependencies = { ...packageJson.dependencies, ...packageJson.devDependencies };

  const missing = requiredPackages.filter(pkg => !dependencies[pkg]);

  if (missing.length > 0) {
    console.log(`‚ö†Ô∏è  Instalando depend√™ncias faltantes: ${missing.join(', ')}`);
    
    try {
      execSync(`npm install ${missing.join(' ')}`, { stdio: 'inherit' });
      console.log('‚úÖ Depend√™ncias instaladas');
    } catch (error) {
      throw new Error(`Erro ao instalar depend√™ncias: ${error.message}`);
    }
  } else {
    console.log('‚úÖ Todas as depend√™ncias est√£o instaladas');
  }
}

async function applySQLFixes() {
  const sqlFiles = [
    'src/database/rate-limiting-functions.sql',
    'schema-fixes.sql'
  ];

  for (const sqlFile of sqlFiles) {
    const filePath = path.join(__dirname, sqlFile);
    
    if (fs.existsSync(filePath)) {
      console.log(`üìù Arquivo SQL encontrado: ${sqlFile}`);
      console.log('   Execute manualmente no Supabase SQL Editor se necess√°rio');
    } else {
      console.log(`‚ö†Ô∏è  Arquivo SQL n√£o encontrado: ${sqlFile}`);
    }
  }
  
  console.log('‚úÖ Arquivos SQL verificados');
}

async function runCriticalFixesScript() {
  const scriptPath = path.join(__dirname, 'src/scripts/apply-critical-fixes.js');
  
  if (!fs.existsSync(scriptPath)) {
    throw new Error('Script de corre√ß√µes cr√≠ticas n√£o encontrado');
  }

  try {
    console.log('‚ö° Executando script de corre√ß√µes...');
    execSync(`node "${scriptPath}"`, { stdio: 'inherit' });
    console.log('‚úÖ Script de corre√ß√µes executado');
  } catch (error) {
    console.log('‚ö†Ô∏è  Script executado com avisos (normal em alguns casos)');
  }
}

async function testEnhancedServer() {
  const serverPath = path.join(__dirname, 'src/enhanced-server.js');
  
  if (!fs.existsSync(serverPath)) {
    throw new Error('Servidor melhorado n√£o encontrado');
  }

  console.log('‚úÖ Servidor melhorado encontrado');
  console.log('   Para testar: node src/enhanced-server.js');
}

// Executar se chamado diretamente
if (require.main === module) {
  runCriticalFixes();
}

module.exports = { runCriticalFixes };
